<?php

// Trying to make sure the theme.inc get's loaded.
include_once('views/theme/jquery_carousel.theme.inc');

/**
 * Implements hook_views_api().
 */
function jquery_carousel_views_api() {
  return array(
    'api' => '3',
    'path' => drupal_get_path('module', 'jquery_carousel') . '/views'
  );
}

function template_preprocess_jquery_carousel(&$vars) {
  _jquery_carousel_preprocess_jquery_carousel($vars);
}

function jquery_carousel_config_form() {
  $form = array();

  $form['itemsPerTransition'] = array(
    '#type' => 'textfield',
    '#title' => t('Items per transition'),
    '#description' => t('number of items moved with each transition'),
    '#default_value' => 1
  );

  $form['orientation'] = array(
    '#type' => 'select',
    '#title' => t('Orientation'),
    '#description' => t('Sets the orientation of the carousel, either horizontal or vertical.'),
    '#options' => array('horizontal' => "Horizontal", 'vertical' => "Vertical"),
    '#default_value' => 1
  );

  $form['loop'] = array(
    '#type' => 'select',
    '#title' => t('Loop'),
    '#description' => t('If set to true carousel will loop back to first or last page accordingly.'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => 1,
    '#boolean' => TRUE
  );

  $form['whitespace'] = array(
    '#type' => 'select',
    '#title' => t('Whitespace'),
    '#description' => t('If set to true the carousel will allow whitespace to be seen when there aren\'t enough items to fill the last page.'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => 1,
    '#boolean' => TRUE
  );

  $form['num_rows'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of Rows'),
    '#description' => t('Number of rows for the carousel'),
    '#default_value' => 1
  );

  $form['nextPrevActions'] = array(
    '#type' => 'select',
    '#title' => t('Next & Previous Links'),
    '#description' => t('whether next and prev links will be included'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => 1,
    '#boolean' => TRUE
  );

  $form['pagination'] = array(
    '#type' => 'select',
    '#title' => t('Pagination'),
    '#description' => t('whether pagination links will be included'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => 1,
    '#boolean' => TRUE
  );

  $form['speed'] = array(
    '#type' => 'select',
    '#title' => t('Speed'),
    '#description' => t('Animation speed'),
    '#options' => array(0 => "Normal", 1 => "Fast", 2 => "Slow"),
    '#default_value' => 1
  );

  $form['easing'] = array(
    '#type' => 'select',
    '#title' => t('Easing'),
    '#description' => t('supports the jQuery easing plugin'),
    '#options' => jquery_carousel_easing_options(),
    '#default_value' => 'linear'
  );

//  $form['fx'] = array(
//    '#type' => 'select',
//    '#title' => t('Easing'),
//    '#description' => t('Effect for the slide'),
//    '#options' => jquery_carousel_easing_options(),
//    '#default_value' => ''
//  );

  $form['autoScroll'] = array(
    '#type' => 'select',
    '#title' => t('Autoscroll'),
    '#description' => t('Set to true to invoke auto scrolling, note when the mouse enters the carousel the interval will stop, it\'ll consequently begin when the mouse leaves.'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => 1,
    '#boolean' => TRUE
  );

  $form['interval'] = array(
    '#type' => 'textfield',
    '#title' => t('Interval'),
    '#description' => t('Sets the amount of time in miliseconds the carousel waits before it automatically scrolls.'),
    '#default_value' => 8000
  );

  $form['continuous'] = array(
    '#type' => 'select',
    '#title' => t('Continuous'),
    '#description' => t('If set to true the carousel will continuously loop through its pages rather than scrolling all the way back to the first page.'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => 1,
    '#boolean' => TRUE
  );

  $form['touch'] = array(
    '#type' => 'select',
    '#title' => t('Touch'),
    '#description' => t('If set to true the carousel will become draggable allowing you to flick through pages.'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => 1
  );

  $form['disabled'] = array(
    '#type' => 'select',
    '#title' => t('Disabled'),
    '#description' => t('If set to true carousel will no longer change state.'),
    '#options' => array(0 => "False", 1 => "True"),
    '#default_value' => FALSE,
    '#boolean' => TRUE
  );

  return $form;
}

function jquery_carousel_easing_options() {
  return array(
    'linear' => 'linear',
    'swing' => 'swing',
    'easeInQuad' => 'easeInQuad',
    'easeOutQuad' => 'easeOutQuad',
    'easeInOutQuad' => 'easeInOutQuad',
    'easeInCubic' => 'easeInCubic',
    'easeOutCubic' => 'easeOutCubic',
    'easeInOutCubic' => 'easeInOutCubic',
    'easeInQuart' => 'easeInQuart',
    'easeOutQuart' => 'easeOutQuart',
    'easeInOutQuart' => 'easeInOutQuart',
    'easeInQuint' => 'easeInQuint',
    'easeOutQuint' => 'easeOutQuint',
    'easeInOutQuint' => 'easeInOutQuint',
    'easeInExpo' => 'easeInExpo',
    'easeOutExpo' => 'easeOutExpo',
    'easeInOutExpo' => 'easeInOutExpo',
    'easeInSine' => 'easeInSine',
    'easeOutSine' => 'easeOutSine',
    'easeInOutSine' => 'easeInOutSine',
    'easeInCirc' => 'easeInCirc',
    'easeOutCirc' => 'easeOutCirc',
    'easeInOutCirc' => 'easeInOutCirc',
    'easeInElastic' => 'easeInElastic',
    'easeOutElastic' => 'easeOutElastic',
    'easeInOutElastic' => 'easeInOutElastic',
    'easeInBack' => 'easeInBack',
    'easeOutBack' => 'easeOutBack',
    'easeInOutBack' => 'easeInOutBack',
    'easeInBounce' => 'easeInBounce',
    'easeOutBounce' => 'easeOutBounce',
    'easeInOutBounce' => 'easeInOutBounce'
  );
}